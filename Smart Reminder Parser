import re
from datetime import datetime
import dateparser

# Sample input reminders
reminders = [
    "Doctor appointment at 10 AM on Wednesday",
    "Call with client tomorrow at 3 PM",
    "Submit report by Friday evening",
    "Lunch with Priya at 1 PM",
    "Team sync next Monday at 9:30 AM",
    "Pay electricity bill",
    "Yoga class at 6 AM daily",
]

# Parse reminder using NLP and regex
def parse_reminder(text):
    time_match = re.search(r'\b(at|by)\s+([0-9]{1,2}(:[0-9]{2})?\s*(AM|PM)?)', text, re.IGNORECASE)
    date_match = dateparser.parse(text, settings={'PREFER_DATES_FROM': 'future'})
    
    time_str = time_match.group(2) if time_match else None
    time_obj = dateparser.parse(time_str) if time_str else None

    task = re.sub(r'\b(at|by)\s+[0-9]{1,2}(:[0-9]{2})?\s*(AM|PM)?', '', text, flags=re.IGNORECASE)
    task = re.sub(r'\b(on|by|at|tomorrow|next|daily|evening|morning|afternoon|night)\b', '', task, flags=re.IGNORECASE).strip()

    return {
        "task": task,
        "date": date_match.strftime("%Y-%m-%d") if date_match else "Unspecified",
        "time": time_obj.strftime("%I:%M %p") if time_obj else "Unspecified"
    }

# Build agenda
def build_agenda(reminders):
    agenda = []
    for r in reminders:
        parsed = parse_reminder(r)
        agenda.append(parsed)
    return sorted(agenda, key=lambda x: (x["date"], x["time"]))

# Display agenda
def display_agenda(agenda):
    print("\n🗓️ Your Smart Agenda:")
    print("-" * 50)
    for item in agenda:
        print(f"{item['date']} at {item['time']} → {item['task']}")
    print("-" * 50)

# Run the parser
agenda = build_agenda(reminders)
display_agenda(agenda)

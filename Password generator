import secrets
import string

def generate_password(length=16, use_letters=True, use_digits=True, use_special_chars=True):
    """
    Generates a secure, random password based on specified criteria.

    Args:
        length (int): The desired length of the password. Defaults to 16.
        use_letters (bool): Include uppercase and lowercase letters. Defaults to True.
        use_digits (bool): Include numbers. Defaults to True.
        use_special_chars (bool): Include special characters. Defaults to True.
    
    Returns:
        str: A randomly generated password.
    
    Raises:
        ValueError: If no character types are selected or if the length is invalid.
    """
    characters = ""
    if use_letters:
        characters += string.ascii_letters
    if use_digits:
        characters += string.digits
    if use_special_chars:
        characters += string.punctuation

    if not characters:
        raise ValueError("At least one character type (letters, digits, or special characters) must be selected.")
    if length <= 0:
        raise ValueError("Password length must be a positive number.")

    # Generate a password by randomly choosing from the character set
    password = ''.join(secrets.choice(characters) for _ in range(length))
    return password

if __name__ == '__main__':
    print("--- Secure Password Generator ---")
    
    # Get user input for password length
    try:
        password_length = int(input("Enter desired password length (e.g., 16): "))
    except ValueError:
        print("Invalid input. Using default length of 16.")
        password_length = 16

    # Get user preferences for character sets
    include_letters = input("Include letters? (y/n, default 'y'): ").lower() in ('y', '')
    include_digits = input("Include digits? (y/n, default 'y'): ").lower() in ('y', '')
    include_special = input("Include special characters? (y/n, default 'y'): ").lower() in ('y', '')

    try:
        # Generate and print the password
        new_password = generate_password(
            length=password_length,
            use_letters=include_letters,
            use_digits=include_digits,
            use_special_chars=include_special
        )
        print("\nYour new password is:", new_password)
    except ValueError as e:
        print(f"Error: {e}")

